// Jobs url http://builder-1.betheroes.com:8080/job/SpotProphets%20-%20.NetCore%20EveryMatrix/configure

properties([
    parameters([
        choice(
              name: '_configfiles_branch',
              description: 'Branch to pull from for "spotprophets.configs"',
              choices: ['ci-dev', 'ci-test-1', 'ci-stg', 'ci-prod-alpha', 'ci-prod']
          ),
          choice(
              name: '_commit_id',
              description: 'Branch to pull from for "netcore.services"',
              choices: ['everymatrix_signalr_integration', 'everymatrix_signalr_integration2', 'development', 'test', 'release', 'master']
          )
    ])
])

pipeline {
    options {
    buildDiscarder(logRotator(numToKeepStr: '30'))
    timestamps()
  }
    
//  agent { label 'windows-agent'}
  agent any

    stages {

        stage ('Get Source') {
            steps {
                dir('repo_jenkins.scripts'){
                    checkout([$class: 'GitSCM', 
                    branches: [[name: '$_commit_id']],
                    // recursiveSubmodules: true,
                    // parentCredentials: true,
                    userRemoteConfigs: [[credentialsId: 'jenkins', url: 'git@github.com:tosstosstoss/jen.git']], // TODO replace git repo to git@bitbucket.org:258projects/netcore.services.git
                    ])    
                }
            }
        }
        

        stage ('Get Jenkins Scripts') {
            sh 'repo_jenkins.scripts_lnx.sh'            
        }

        stage ('Inject app config') {
            sh "repo_spotprophets.configs_lnx.sh"
            source ./vars.ini
        }

        stage ('Prepare for build') {
            steps { 
                sh "EveryMatrixDockerPrepare.sh"
                sh "source ./EveryMatrixDockerPrepare"
            }
        }


        stage   ('Build') {
            steps {
                sh "repo_jenkins.scripts/EveryMatrix/EveryMatrixDockerCreate.sh"
            }

        stage ("Maintenase") {
            steps {
                
            }
        }

    }
}